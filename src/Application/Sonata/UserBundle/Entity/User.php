<?php

/**
 * This file is part of the <name> project.
 *
 * (c) <yourname> <youremail>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Application\Sonata\UserBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Doctrine\Common\Collections\ArrayCollection;
use Restomods\ListingBundle\Entity\Listing;
use Sonata\UserBundle\Entity\BaseUser as BaseUser;

/**
 * This file has been generated by the Sonata EasyExtends bundle.
 *
 * @link https://sonata-project.org/bundles/easy-extends
 *
 * References :
 *   working with object : http://www.doctrine-project.org/projects/orm/2.0/docs/reference/working-with-objects/en
 * @ORM\Entity(repositoryClass="Application\Sonata\UserBundle\Repository\UserRepository")
 *
 * @author <yourname> <youremail>
 */
class User extends BaseUser
{
	/**
	 * @var int $id
	 */
	protected $id;

	/**
	 * @var $stripeCustomerId
	 */
	private $stripeCustomerId;

	/**
	 * @var $stripeSubscriptionId ;
	 */
	private $stripeSubscriptionId;

    /**
     * @var $stripeAddOnChargeId ;
     */
    private $stripeAddOnChargeId;

    /**
     * @var $referrerCode
     */
    private $referrerCode;

    /**
     * @var $sweepstakesPaymentCompleted
     */
    private $sweepstakesPaymentCompleted;

    /**
     * @var $renewEntriesPatch
     */
    private $renewEntriesPatch;

    /**
     * @var $abandonCartEmail
     */
    private $abandonCartEmail = 0;

    /**
     * @var $funnelPurchaseId ;
     */
    private $funnelPurchaseId;

    /**
     * @var $abandonCartEmail
     */
    private $funnelImportedUser;

    /**
     * @var ArrayCollection
     * @ORM\OneToMany(targetEntity="Restomods\ListingBundle\Entity\SweepstakesUserEntries", mappedBy="user")
     */
    private $sweepstakesUserEntries;

    /**
     * @var $address
     */
    private $address;

    /**
     * @var $city
     */
    private $city;

    /**
     * @var $state
     */
    private $state;

    /**
     * @var $country
     */
    private $country;

    /**
     * @var $zip
     */
    private $zip;

    /**
     * @var $cc
     */
    private $cc;

    /**
     * @var $limeLightCustomerId
     */
    private $limeLightCustomerId;

    /**
     * @var $lastOrderId
     */
    private $lastOrderId;

    /**
     * @var $subscriptionOrderId
     */
    private $subscriptionOrderId;

    /**
     * @var $subscribedAt
     */
    private $subscribedAt;

    /**
     * @var $cfAffiliateId
     */
    private $cfAffiliateId;

    /**
     * @var $utmSource
     */
    private $utmSource;

    /**
     * @var $utmMedium
     */
    private $utmMedium;

    /**
     * @var $utmCampaign
     */
    private $utmCampaign;

    /**
     * @var $utmTerm
     */
    private $utmTerm;

    /**
     * @var $utmContent
     */
    private $utmContent;

    /**
     * @var $cfUvid
     */
    private $cfUvid;

    /**
     * @var $fromSweepstakes
     */
    private $fromSweepstakes;

    /**
     * @var $apiUserid
     */
    private $apiUserid;

	public function generateReferrerCode()
	{
		if(!$this->getReferrerCode()) {
			$this->setReferrerCode(strtolower('rm'.base_convert($this->id,36,26).$this->username[0].$this->username[1]));
		}
	}

	public function __toString(){
		return $this->firstname ? $this->firstname.' '.$this->lastname : $this->username;
	}

	/**
	 * User constructor.
	 */
	public function __construct()
	{
		parent::__construct();
		$this->roles    = array( 'ROLE_FREE_USER' );
		$this->subscribedAt = new \DateTime('0000-00-00 00:00:00');
	}

	/**
	 * Get id
	 *
	 * @return int $id
	 */
	public function getId()
	{
		return $this->id;
	}

	/**
	 * @return mixed
	 */
	public function getStripeCustomerId()
	{
		return $this->stripeCustomerId;
	}

	/**
	 * @param mixed $stripeCustomerId
	 *
	 * @return User
	 */
	public function setStripeCustomerId( $stripeCustomerId )
	{
		$this->stripeCustomerId = $stripeCustomerId;

		return $this;
	}

	/**
	 * @return bool
	 */
	public function isCustomer()
	{
		return $this->stripeCustomerId != null || $this->limeLightCustomerId != null;
	}

	/**
	 * @return mixed
	 */
	public function getStripeSubscriptionId()
	{
		return $this->stripeSubscriptionId;
	}

	/**
	 * @param mixed $stripeSubscriptionId
	 *
	 * @return User
	 */
	public function setStripeSubscriptionId( $stripeSubscriptionId )
	{
		$this->stripeSubscriptionId = $stripeSubscriptionId;

		return $this;
	}

	/**
	 * @return bool
	 */
	public function hasSubscription()
	{
		return in_array('ROLE_SUBSCRIBER_USER', $this->getRoles()) && ($this->stripeSubscriptionId != null || $this->subscriptionOrderId);
	}

    /**
     * @return mixed
     */
    public function getReferrerCode()
    {
        return $this->referrerCode;
    }

    /**
     * @param mixed $referrerCode
     */
    public function setReferrerCode($referrerCode)
    {
        $this->referrerCode = $referrerCode;
    }

    /**
     * Add sweepstakesUserEntry
     *
     * @param \Restomods\ListingBundle\Entity\SweepstakesUserEntries $sweepstakesUserEntry
     *
     * @return User
     */
    public function addSweepstakesUserEntry(\Restomods\ListingBundle\Entity\SweepstakesUserEntries $sweepstakesUserEntry)
    {
        $this->sweepstakesUserEntries[] = $sweepstakesUserEntry;

        return $this;
    }

    /**
     * Remove sweepstakesUserEntry
     *
     * @param \Restomods\ListingBundle\Entity\SweepstakesUserEntries $sweepstakesUserEntry
     */
    public function removeSweepstakesUserEntry(\Restomods\ListingBundle\Entity\SweepstakesUserEntries $sweepstakesUserEntry)
    {
        $this->sweepstakesUserEntries->removeElement($sweepstakesUserEntry);
    }

    /**
     * Get sweepstakesUserEntries
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getSweepstakesUserEntries()
    {
        return $this->sweepstakesUserEntries;
    }


    /**
     * Set sweepstakesPaymentCompleted
     *
     * @param boolean $sweepstakesPaymentCompleted
     *
     * @return User
     */
    public function setSweepstakesPaymentCompleted($sweepstakesPaymentCompleted)
    {
        $this->sweepstakesPaymentCompleted = $sweepstakesPaymentCompleted;

        return $this;
    }

    /**
     * Get sweepstakesPaymentCompleted
     *
     * @return boolean
     */
    public function getSweepstakesPaymentCompleted()
    {
        return $this->sweepstakesPaymentCompleted;
    }

    /**
     * Set abandonCartEmail
     *
     * @param boolean $abandonCartEmail
     *
     * @return User
     */
    public function setAbandonCartEmail($abandonCartEmail)
    {
        $this->abandonCartEmail = $abandonCartEmail;

        return $this;
    }

    /**
     * Get abandonCartEmail
     *
     * @return boolean
     */
    public function getAbandonCartEmail()
    {
        return $this->abandonCartEmail;
    }

    /**
     * Set stripeAddOnChargeId
     *
     * @param string $stripeAddOnChargeId
     *
     * @return User
     */
    public function setStripeAddOnChargeId($stripeAddOnChargeId)
    {
        $this->stripeAddOnChargeId = $stripeAddOnChargeId;

        return $this;
    }

    /**
     * Get stripeAddOnChargeId
     *
     * @return string
     */
    public function getStripeAddOnChargeId()
    {
        return $this->stripeAddOnChargeId;
    }

    /**
     * Set funnelPurchaseId
     *
     * @param string $funnelPurchaseId
     *
     * @return User
     */
    public function setFunnelPurchaseId($funnelPurchaseId)
    {
        $this->funnelPurchaseId = $funnelPurchaseId;

        return $this;
    }

    /**
     * Get funnelPurchaseId
     *
     * @return string
     */
    public function getFunnelPurchaseId()
    {
        return $this->funnelPurchaseId;
    }

    /**
     * Set funnelImportedUser
     *
     * @param boolean $funnelImportedUser
     *
     * @return User
     */
    public function setFunnelImportedUser($funnelImportedUser)
    {
        $this->funnelImportedUser = $funnelImportedUser;

        return $this;
    }

    /**
     * Get funnelImportedUser
     *
     * @return boolean
     */
    public function getFunnelImportedUser()
    {
        return $this->funnelImportedUser;
    }

    /**
     * Set renewEntriesPatch
     *
     * @param boolean $renewEntriesPatch
     *
     * @return User
     */
    public function setRenewEntriesPatch($renewEntriesPatch)
    {
        $this->renewEntriesPatch = $renewEntriesPatch;

        return $this;
    }

    /**
     * Get renewEntriesPatch
     *
     * @return boolean
     */
    public function getRenewEntriesPatch()
    {
        return $this->renewEntriesPatch;
    }

    /**
     * Set address
     *
     * @param string $address
     *
     * @return User
     */
    public function setAddress($address)
    {
        $this->address = $address;

        return $this;
    }

    /**
     * Get address
     *
     * @return string
     */
    public function getAddress()
    {
        return $this->address;
    }

    /**
     * Set city
     *
     * @param string $city
     *
     * @return User
     */
    public function setCity($city)
    {
        $this->city = $city;

        return $this;
    }

    /**
     * Get city
     *
     * @return string
     */
    public function getCity()
    {
        return $this->city;
    }

    /**
     * Set state
     *
     * @param string $state
     *
     * @return User
     */
    public function setState($state)
    {
        $this->state = $state;

        return $this;
    }

    /**
     * Set country
     *
     * @param string $country
     *
     * @return User
     */
    public function setCountry($country)
    {
        $this->country = $country;

        return $this;
    }

    /**
     * Get country
     *
     * @return string
     */
    public function getCountry()
    {
        return $this->country;
    }

    /**
     * Get state
     *
     * @return string
     */
    public function getState()
    {
        return $this->state;
    }

    /**
     * Set zip
     *
     * @param string $zip
     *
     * @return User
     */
    public function setZip($zip)
    {
        $this->zip = $zip;

        return $this;
    }

    /**
     * Get zip
     *
     * @return string
     */
    public function getZip()
    {
        return $this->zip;
    }

	/**
     * Set cc
     *
     * @param string $cc
     *
     * @return User
     */
    public function setCc($cc)
    {
        $this->cc = $cc;

        return $this;
    }

    /**
     * Get cc
     *
     * @return string
     */
    public function getCc()
    {
        return $this->cc;
    }

	/**
     * Set limeLightCustomerId
     *
     * @param string $limeLightCustomerId
     *
     * @return User
     */
    public function setLimeLightCustomerId($limeLightCustomerId)
    {
        $this->limeLightCustomerId = $limeLightCustomerId;

        return $this;
    }

    /**
     * Get limeLightCustomerId
     *
     * @return string
     */
    public function getLimeLightCustomerId()
    {
        return $this->limeLightCustomerId;
    }

	/**
     * Set lastOrderId
     *
     * @param string $lastOrderId
     *
     * @return User
     */
    public function setLastOrderId($lastOrderId)
    {
        $this->lastOrderId = $lastOrderId;

        return $this;
    }

    /**
     * Get lastOrderId
     *
     * @return string
     */
    public function getLastOrderId()
    {
        return $this->lastOrderId;
    }

	/**
     * Set subscriptionOrderId
     *
     * @param string $subscriptionOrderId
     *
     * @return User
     */
    public function setSubscriptionOrderId($subscriptionOrderId)
    {
        $this->subscriptionOrderId = $subscriptionOrderId;

        return $this;
    }

    /**
     * Get subscriptionOrderId
     *
     * @return string
     */
    public function getSubscriptionOrderId()
    {
        return $this->subscriptionOrderId;
    }

    /**
     * Set cfAffiliateId
     *
     * @param string $cfAffiliateId
     *
     * @return User
     */
    public function setCFAffiliateId($cfAffiliateId)
    {
        $this->cfAffiliateId = $cfAffiliateId;

        return $this;
    }

	/**
     * Get subscribedAt
     *
     * @return string
     */
    public function getSubscribedAt()
    {
        return $this->subscribedAt;
    }

    /**
     * Set subscribedAt
     *
     * @param \DateTime $subscribedAt
     *
     * @return User
     */
    public function setSubscribedAt($subscribedAt)
    {
        $this->subscribedAt = $subscribedAt;

        return $this;
    }

    /**
     * Get cfAffiliateId
     *
     * @return string
     */
    public function getCFAffiliateId()
    {
        return $this->cfAffiliateId;
    }

    /**
     * Set utmSource
     *
     * @param string $utmSource
     *
     * @return User
     */
    public function setUtmSource($utmSource)
    {
        $this->utmSource = $utmSource;

        return $this;
    }

    /**
     * Get utmSource
     *
     * @return string
     */
    public function getUtmSource()
    {
        return $this->utmSource;
    }

    /**
     * Set utmMedium
     *
     * @param string $utmMedium
     *
     * @return User
     */
    public function setUtmMedium($utmMedium)
    {
        $this->utmMedium = $utmMedium;

        return $this;
    }

    /**
     * Get utmMedium
     *
     * @return string
     */
    public function getUtmMedium()
    {
        return $this->utmMedium;
    }

    /**
     * Set utmCampaign
     *
     * @param string $utmCampaign
     *
     * @return User
     */
    public function setUtmCampaign($utmCampaign)
    {
        $this->utmCampaign = $utmCampaign;

        return $this;
    }

    /**
     * Get utmCampaign
     *
     * @return string
     */
    public function getUtmCampaign()
    {
        return $this->utmCampaign;
    }

    /**
     * Set utmTerm
     *
     * @param string $utmTerm
     *
     * @return User
     */
    public function setUtmTerm($utmTerm)
    {
        $this->utmTerm = $utmTerm;

        return $this;
    }

    /**
     * Get utmTerm
     *
     * @return string
     */
    public function getUtmTerm()
    {
        return $this->utmTerm;
    }

    /**
     * Set utmContent
     *
     * @param string $utmContent
     *
     * @return User
     */
    public function setUtmContent($utmContent)
    {
        $this->utmContent = $utmContent;

        return $this;
    }

    /**
     * Get utmContent
     *
     * @return string
     */
    public function getUtmContent()
    {
        return $this->utmContent;
    }

    /**
     * Set cfUvid
     *
     * @param string $cfUvid
     *
     * @return User
     */
    public function setCfUvid($cfUvid)
    {
        $this->cfUvid = $cfUvid;

        return $this;
    }

    /**
     * Get utmContent
     *
     * @return string
     */
    public function getCfUvid()
    {
        return $this->cfUvid;
    }

    /**
     * Set fromSweepstakes
     *
     * @param string $fromSweepstakes
     *
     * @return User
     */
    public function setFromSweepstakes($fromSweepstakes)
    {
        $this->fromSweepstakes = $fromSweepstakes;

        return $this;
    }

    /**
     * Get fromSweepstakes
     *
     * @return string
     */
    public function getFromSweepstakes()
    {
        return $this->fromSweepstakes;
    }

    /**
     * Set apiUserid
     *
     * @param string $apiUserid
     *
     * @return User
     */
    public function setApiUserid($apiUserid)
    {
        $this->apiUserid = $apiUserid;

        return $this;
    }

    /**
     * Get apiUserid
     *
     * @return string
     */
    public function getApiUserid()
    {
        return $this->apiUserid;
    }
}
